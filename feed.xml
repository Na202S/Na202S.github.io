<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://na202s.github.io/</id><title>Na</title><subtitle></subtitle> <updated>2022-06-16T02:16:08+00:00</updated> <author> <name>Na</name> <uri>https://na202s.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://na202s.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://na202s.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Na </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>健身先健脑，科学减脂之运动篇！</title><link href="https://na202s.github.io/posts/fatloss-sports/" rel="alternate" type="text/html" title="健身先健脑，科学减脂之运动篇！" /><published>2022-06-12T23:29:00+00:00</published> <updated>2022-06-12T23:29:00+00:00</updated> <id>https://na202s.github.io/posts/fatloss-sports/</id> <content src="https://na202s.github.io/posts/fatloss-sports/" /> <author> <name>Na</name> </author> <category term="Fitness" /> <summary> 1、搞清楚自己在练什么，才能真正减肥丨有氧OR无氧？ 1.1 人体供能系统 人体三大供能系统分别是：ATP-CP系统、 糖酵解系统、有氧系统。 人体的直接能量来源是：ATP（三磷酸腺苷）。ATP在ATP酶的催化下，迅速水解为ADP（二磷酸腺苷）和Pi（无机磷酸），并释放出能量。 人体三大供能系统的作用就是生成ATP供能。 这三个系统在任何运动中都是同时存在的，只是在不同的阶段，三者供能的比例不同而已。 1.1.1 ATP-CP 系统 细胞内只储存了少量ATP，进行剧烈运动时，仅能维持1～3s，之后的能量供应需要依靠ATP的再生。细胞内的另一种高能磷酸分子——磷酸肌酸（CP）可以通过分解作用提供能量和无机磷酸，使ADP重新合成ATP，从而维持ATP的稳定。此过程非常迅速，在无氧和有氧条件下均可进行。 像短跑这样的大强度运动，在其最初的几秒内，ATP含量维持在一个相对... </summary> </entry> <entry><title>健身先健脑，科学减脂之饮食篇！</title><link href="https://na202s.github.io/posts/fatloss-food/" rel="alternate" type="text/html" title="健身先健脑，科学减脂之饮食篇！" /><published>2022-06-11T22:29:00+00:00</published> <updated>2022-06-11T22:29:00+00:00</updated> <id>https://na202s.github.io/posts/fatloss-food/</id> <content src="https://na202s.github.io/posts/fatloss-food/" /> <author> <name>Na</name> </author> <category term="Fitness" /> <summary> 1、导致肥胖的元凶是谁？怎么吃更不容易变胖？ 身体储存的脂肪变多了！ 1.1 三大营养元素 我们吃进去的食物含有能为身体提供热量的三大营养元素：碳水化合物、蛋白质、脂肪。这三种营养元素是如何被吸收的？吸收后去了哪里？是否转化为脂肪？怎么转化为脂肪？ 1.1.1 碳水化合物 转化路径 碳水化合物，也就是“糖”，主要来源是主食、水果、甜品等。通过消化腺被分解为葡萄糖等单糖形式，被人体吸收。吸收后的糖，首先被安排去补充血糖、肝糖、肌糖，这是路径 A。当这些地方的糖被补充充足之后，多余的糖就会被转化为脂肪储存在体内，这是路径 B。 吃下等量碳水，血糖、肌糖水平低的情况下，或者肝糖、肌糖储存量更大的人，由于糖先走路径 A，就会有很少甚至没有碳水走路径 B，也就不会转化为脂肪。 反之，血糖、肌糖水平高的情况下，或者肝糖、肌糖储存量小的人，这些碳水绝大部... </summary> </entry> <entry><title>Berkeley CS61b：14. Disjoint Sets</title><link href="https://na202s.github.io/posts/notes14-Disjoint-Set/" rel="alternate" type="text/html" title="Berkeley CS61b：14. Disjoint Sets" /><published>2021-11-02T00:00:00+00:00</published> <updated>2021-11-02T00:00:00+00:00</updated> <id>https://na202s.github.io/posts/notes14-Disjoint-Set/</id> <content src="https://na202s.github.io/posts/notes14-Disjoint-Set/" /> <author> <name>Na</name> </author> <category term="Courses" /> <category term="Berkeley CS61b" /> <summary> The Disjoint Sets Interface public interface DisjointSets { /** Connects two items P and Q. */ void connect(int p, int q); /** Checks to see if two items are connected. */ boolean isConnected(int p, int q); } Representation connect(5, 2) 给每个节点分配一个 parent，用树的形式表示。 Find(x): 返回 x 的根节点，可以用 path compression 优化；（一般都优化） Union(x, y): 将 x 和 y 所属的树合并为一棵，方法是让 Find(x) 成为 Find(y) 的孩子。可以用 r... </summary> </entry> <entry><title>Berkeley CS61b：13. Priority Queues and Heaps</title><link href="https://na202s.github.io/posts/notes13-PQ&amp;heap/" rel="alternate" type="text/html" title="Berkeley CS61b：13. Priority Queues and Heaps" /><published>2021-07-13T00:00:00+00:00</published> <updated>2021-07-13T00:00:00+00:00</updated> <id>https://na202s.github.io/posts/notes13-PQ&amp;heap/</id> <content src="https://na202s.github.io/posts/notes13-PQ&amp;heap/" /> <author> <name>Na</name> </author> <category term="Courses" /> <category term="Berkeley CS61b" /> <summary> 13.1 PQ Interface The Priority Queue Interface (最小)优先队列：允许获取和移除队列中的最小项。在需要追踪”smallest”，“largest”，“best”时很有用。接口如下：添加项、获取最小项、删除最小项、队列大小。 public interface MinPQ&amp;lt;Item&amp;gt; { public void add(Item x); public Item getSmallest(); public Item removeSmallest(); public int size(); } Using Priority 应用场景：每天追踪用户对话，报告 $M$ 条最有害的信息。 public List&amp;lt;String&amp;gt; unharmoniousTexts(Sniffer sn... </summary> </entry> </feed>
